name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
            submodules: recursive
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"
      - name: Build
        run: |
          $ver = '${{ github.ref }}' -replace 'refs/tags/',''
          dotnet restore -r win XIVSlothCombo.sln
          invoke-expression 'dotnet build XIVSlothCombo.sln --no-restore --configuration Release --nologo -p:Version=$ver -p:FileVersion=$ver'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: XIVSlothCombo ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./XIVSlothCombo/bin/Release/XIVSlothCombo/latest.zip
          asset_name: latest.zip
          asset_content_type: application/zip

      - name: Write out repo.json
        run: |
          $ver = '${{ github.ref }}' -replace 'refs/tags/',''
          $path = './base_repo.json'
          $new_path = './repo.json'
          $content = get-content -path $path
          $content = $content -replace '1.0.0.0',$ver
          set-content -Path $new_path -Value $content
      - name: Commit repo.json
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin master && git checkout master
          git add repo.json
          git commit -m "[CI] Updating repo.json for ${{ github.ref }}" || true
          git push origin master || true